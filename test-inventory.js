// Teste do sistema de invent√°rio
const fetch = require('node-fetch').default

async function testInventory() {
  try {
    console.log('üß™ Testando sistema de invent√°rio...')
    
    // 1. Primeiro fazer login para obter sess√£o
    console.log('\n1Ô∏è‚É£ Fazendo login...')
    const loginResponse = await fetch('http://localhost:3000/api/auth/login', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        email: 'teste@teste.com',
        password: '123456'
      })
    })
    
    if (!loginResponse.ok) {
      const errorData = await loginResponse.json()
      console.log('‚ùå Erro no login:', errorData.error)
      return
    }
    
    const loginData = await loginResponse.json()
    console.log('‚úÖ Login bem-sucedido!')
    
    // 2. Extrair cookie de sess√£o
    const cookies = loginResponse.headers.get('set-cookie')
    if (!cookies) {
      console.log('‚ùå Nenhum cookie recebido')
      return
    }
    
    const sessionCookie = cookies.split(';')[0]
    console.log('üç™ Cookie de sess√£o:', sessionCookie)
    
    // 3. Testar cria√ß√£o de produto
    console.log('\n2Ô∏è‚É£ Testando cria√ß√£o de produto...')
    const productData = {
      name: 'Painel LED Teste',
      code: 'LED001',
      description: 'Painel LED de teste para o sistema',
      totalMeters: 10,
      pricePerMeter: 25.50
    }
    
    const productResponse = await fetch('http://localhost:3000/api/products', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': sessionCookie
      },
      body: JSON.stringify(productData)
    })
    
    if (productResponse.ok) {
      const product = await productResponse.json()
      console.log('‚úÖ Produto criado com sucesso!')
      console.log('üì¶ ID:', product.id)
      console.log('üì¶ Nome:', product.name)
      console.log('üì¶ C√≥digo:', product.code)
    } else {
      const errorData = await productResponse.json()
      console.log('‚ùå Erro ao criar produto:', errorData.error)
    }
    
    // 4. Testar cria√ß√£o de acess√≥rio
    console.log('\n3Ô∏è‚É£ Testando cria√ß√£o de acess√≥rio...')
    const accessoryData = {
      name: 'Cabo de Energia',
      code: 'CAB001',
      description: 'Cabo de energia para pain√©is LED',
      totalQty: 50,
      pricePerUnit: 15.00
    }
    
    const accessoryResponse = await fetch('http://localhost:3000/api/accessories', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': sessionCookie
      },
      body: JSON.stringify(accessoryData)
    })
    
    if (accessoryResponse.ok) {
      const accessory = await accessoryResponse.json()
      console.log('‚úÖ Acess√≥rio criado com sucesso!')
      console.log('üîå ID:', accessory.id)
      console.log('üîå Nome:', accessory.name)
      console.log('üîå C√≥digo:', accessory.code)
    } else {
      const errorData = await accessoryResponse.json()
      console.log('‚ùå Erro ao criar acess√≥rio:', errorData.error)
    }
    
    // 5. Testar cria√ß√£o de equipamento
    console.log('\n4Ô∏è‚É£ Testando cria√ß√£o de equipamento...')
    const equipmentData = {
      name: 'Gerador de Energia',
      code: 'GEN001',
      description: 'Gerador port√°til para eventos',
      totalQty: 5,
      pricePerUnit: 200.00,
      category: 'Energia',
      brand: 'Marca Teste',
      model: 'Modelo 2024'
    }
    
    const equipmentResponse = await fetch('http://localhost:3000/api/equipment', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Cookie': sessionCookie
      },
      body: JSON.stringify(equipmentData)
    })
    
    if (equipmentResponse.ok) {
      const equipment = await equipmentResponse.json()
      console.log('‚úÖ Equipamento criado com sucesso!')
      console.log('‚ö° ID:', equipment.id)
      console.log('‚ö° Nome:', equipment.name)
      console.log('‚ö° C√≥digo:', equipment.code)
    } else {
      const errorData = await equipmentResponse.json()
      console.log('‚ùå Erro ao criar equipamento:', errorData.error)
    }
    
    // 6. Listar todos os itens
    console.log('\n5Ô∏è‚É£ Listando todos os itens...')
    
    const productsResponse = await fetch('http://localhost:3000/api/products', {
      headers: { 'Cookie': sessionCookie }
    })
    if (productsResponse.ok) {
      const products = await productsResponse.json()
      console.log('üì¶ Produtos:', products.length)
    }
    
    const accessoriesResponse = await fetch('http://localhost:3000/api/accessories', {
      headers: { 'Cookie': sessionCookie }
    })
    if (accessoriesResponse.ok) {
      const accessories = await accessoriesResponse.json()
      console.log('üîå Acess√≥rios:', accessories.length)
    }
    
    const equipmentResponse2 = await fetch('http://localhost:3000/api/equipment', {
      headers: { 'Cookie': sessionCookie }
    })
    if (equipmentResponse2.ok) {
      const equipment = await equipmentResponse2.json()
      console.log('‚ö° Equipamentos:', equipment.length)
    }
    
    console.log('\nüéâ Teste do invent√°rio conclu√≠do!')
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message)
  }
}

// Aguardar um pouco para o servidor inicializar
setTimeout(testInventory, 3000)
